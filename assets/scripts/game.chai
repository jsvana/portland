use("assets/scripts/helpers.chai");

global UPDATE_INTERVAL = 50;
global PROJECTILE_SPEED = 3;
global PROJECTILE_MAX_DISTANCE = 100;

global movementFuncs = [0];

def init() {
  if (initialized()) {
    return;
  }
  loadMap("assets/maps/main.json");
  loadCharacter("assets/sprites/hero.json", 0, 1, 6);
  setCharacterMoveSpeed(200, 100);
  getHero().setMaxHp(100);

  var id = addNpc("assets/sprites/undead.json", 0, 3, 1);
  movementFuncs.push_back(randomMovement);
  addItem("assets/sprites/item.json", 2, 14, 6);

  getHero().setCollisionCallback(heroCollision);

  registerTileAction(9, 6, showSign);
  addFlagChangeCallback("hit_enemy", flagChange);
  setValue("hero_money", 0);
  addValueChangeCallback("hero_money", moneyChange);
}

def jump() {
  getHero().startJump(1);
}

def action() {
  if (dialogRunning()) {
    return;
  }
  runTileAction();
}

def attack() {
  if (!getHero().getFlag("firing")) {
    getHero().setFlag("firing", true);
    var id = fireFromSprite(getHero(), DIRECTION_RIGHT, "assets/sprites/ammo.json", 25);
    var projectile = getSprite(id);
    projectile.setCollisionCallback(projectileCollision);
    projectile.setCleanupCallback(projectileCleanup);
  }
}

def update() {
  if (dialogRunning()) {
    return;
  }

  if (directionPressed(DIRECTION_LEFT)) {
    queueMove(DIRECTION_LEFT);
  }
  if (directionPressed(DIRECTION_RIGHT)) {
    queueMove(DIRECTION_RIGHT);
  }

  movementFuncs[1](1);
}

def projectileCollision(projectileId, otherId) {
  if (otherId == getHero().id) {
    return;
  }
  getSprite(projectileId).markNeedsCleanup();
  getHero().setFlag("firing", false);
}

def projectileCleanup(projectileId) {
  getHero().setFlag("firing", false);
}

def flagChange(newVal) {
  print("hit_enemy changed");
  print(newVal);
}

def moneyChange(newVal) {
  print("new money value");
  print(newVal);
}

def heroCollision(heroId, otherId) {
  if (otherId == 1) {
    if (getFlag("hit_enemy")) {
      print("already hit enemy");
    } else {
      getHero().damage(10);
      setFlag("hit_enemy", true);
    }
  } else if (otherId == 2) {
    var item = getItem(otherId);
    if (item.held()) {
      return;
    }
    item.hold();
    getHero().addItem(otherId);
    setValue("hero_money", getValue("hero_money") + 10);
  }
}

def showSign() {
  showDialog("Hello!");
}
